#######################
Facebook Authentication
#######################

The Facebook authority allows you to authenticate users by using their Facebook
account. This is useful if you have modules that contain personalization and you
don't want to maintain a separate account system. Because the Facebook system
includes users that are not part of your organization, it is not suitable for
restricting access. 

Facebook uses a form of *OAuth*. Instead of authenticating directly to Facebook, the user gets redirected
to the Facebook login page. Then they must authenticate and then authorize access to the application. 
Your application has no access to the user's login or password.

In order to successfully authenticate users using Facebook, you must first register your application.

* Go to http://www.facebook.com/developers/createapp.php
* Enter an App Name
* Once the Application is created, click the *Web Site* tab. 
* Take note of the Application ID and Application Secret.
* You need to set the Site URL and Site Domain to match your domain. Facebook will only accept authentication
  requests from a subdomain of the domain you enter. 
* Make sure to save your changes.

=============
Configuration
=============

There are a few parameters you need to configure:

* *USER_LOGIN* - Must be set to LINK, which will show a link to the facebook login page.
* *FACEBOOK_API_KEY* - Set this to the *Application ID* provided by Facebook
* *FACEBOOK_API_SECRET* - Set this to the *Application Secret* provided by Facebook

You should keep your API key and secret protected since they represent your application's identity. 
Do not place these values in a public source code repository.

============
How it Works
============

OAuth systems work by redirecting the user to an authentication page hosted by the service. The 
application sends a series of values including a URL callback with the request. Once the request 
is complete, the service redirects back to the callback URL. 

The callback URL is generated by Kurogo based on the domain of server you are connecting to. Facebook 
requires that the callback url must be in the same domain (or subdomain) as the Site Domain value
specified when registering your application. This presents a problem during development since many
developers will use *localhost* to test their applications while coding. The best way to combat this
is to edit your *hosts* file that allows you to create static DNS->IP mappings. Most unix systems
will have this file located at */etc/hosts*. You should edit this file by adding a test subdomain
entry that maps to 127.0.0.1 (which is localhost). For instance:

  127.0.0.1     dev.example.com

Now, instead of testing your site using localhost, you would direct your browser to *dev.example.com* (or
whatever your domain is). You can also include the port if your server is listening on a port other
than 80. Thus when Facebook redirects back to *dev.example.com* your computer will use the local
ip address of 127.0.0.1. 
